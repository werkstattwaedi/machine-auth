// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { AuthenticationPart2, AuthenticationPart2T } from '../../oww/session/authentication-part2';
import { AuthorizationResult, unionToAuthorizationResult, unionListToAuthorizationResult } from '../../oww/session/authorization-result';
import { StateAuthorized, StateAuthorizedT } from '../../oww/session/state-authorized';
import { StateRejected, StateRejectedT } from '../../oww/session/state-rejected';


export class AuthenticatePart2Response implements flatbuffers.IUnpackableObject<AuthenticatePart2ResponseT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AuthenticatePart2Response {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAuthenticatePart2Response(bb:flatbuffers.ByteBuffer, obj?:AuthenticatePart2Response):AuthenticatePart2Response {
  return (obj || new AuthenticatePart2Response()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAuthenticatePart2Response(bb:flatbuffers.ByteBuffer, obj?:AuthenticatePart2Response):AuthenticatePart2Response {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new AuthenticatePart2Response()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

sessionId():string|null
sessionId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
sessionId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

resultType():AuthorizationResult {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : AuthorizationResult.NONE;
}

result<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startAuthenticatePart2Response(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addSessionId(builder:flatbuffers.Builder, sessionIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, sessionIdOffset, 0);
}

static addResultType(builder:flatbuffers.Builder, resultType:AuthorizationResult) {
  builder.addFieldInt8(1, resultType, AuthorizationResult.NONE);
}

static addResult(builder:flatbuffers.Builder, resultOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, resultOffset, 0);
}

static endAuthenticatePart2Response(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createAuthenticatePart2Response(builder:flatbuffers.Builder, sessionIdOffset:flatbuffers.Offset, resultType:AuthorizationResult, resultOffset:flatbuffers.Offset):flatbuffers.Offset {
  AuthenticatePart2Response.startAuthenticatePart2Response(builder);
  AuthenticatePart2Response.addSessionId(builder, sessionIdOffset);
  AuthenticatePart2Response.addResultType(builder, resultType);
  AuthenticatePart2Response.addResult(builder, resultOffset);
  return AuthenticatePart2Response.endAuthenticatePart2Response(builder);
}

serialize():Uint8Array {
  return this.bb!.bytes();
}

static deserialize(buffer: Uint8Array):AuthenticatePart2Response {
  return AuthenticatePart2Response.getRootAsAuthenticatePart2Response(new flatbuffers.ByteBuffer(buffer))
}

unpack(): AuthenticatePart2ResponseT {
  return new AuthenticatePart2ResponseT(
    this.sessionId(),
    this.resultType(),
    (() => {
      const temp = unionToAuthorizationResult(this.resultType(), this.result.bind(this));
      if(temp === null) { return null; }
      return temp.unpack()
  })()
  );
}


unpackTo(_o: AuthenticatePart2ResponseT): void {
  _o.sessionId = this.sessionId();
  _o.resultType = this.resultType();
  _o.result = (() => {
      const temp = unionToAuthorizationResult(this.resultType(), this.result.bind(this));
      if(temp === null) { return null; }
      return temp.unpack()
  })();
}
}

export class AuthenticatePart2ResponseT implements flatbuffers.IGeneratedObject {
constructor(
  public sessionId: string|Uint8Array|null = null,
  public resultType: AuthorizationResult = AuthorizationResult.NONE,
  public result: AuthenticationPart2T|StateAuthorizedT|StateRejectedT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const sessionId = (this.sessionId !== null ? builder.createString(this.sessionId!) : 0);
  const result = builder.createObjectOffset(this.result);

  return AuthenticatePart2Response.createAuthenticatePart2Response(builder,
    sessionId,
    this.resultType,
    result
  );
}
}
