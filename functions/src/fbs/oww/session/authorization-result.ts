// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { AuthenticationPart2, AuthenticationPart2T } from '../../oww/session/authentication-part2';
import { StateAuthorized, StateAuthorizedT } from '../../oww/session/state-authorized';
import { StateRejected, StateRejectedT } from '../../oww/session/state-rejected';


export enum AuthorizationResult {
  NONE = 0,
  AuthenticationPart2 = 1,
  StateAuthorized = 2,
  StateRejected = 3
}

export function unionToAuthorizationResult(
  type: AuthorizationResult,
  accessor: (obj:AuthenticationPart2|StateAuthorized|StateRejected) => AuthenticationPart2|StateAuthorized|StateRejected|null
): AuthenticationPart2|StateAuthorized|StateRejected|null {
  switch(AuthorizationResult[type]) {
    case 'NONE': return null; 
    case 'AuthenticationPart2': return accessor(new AuthenticationPart2())! as AuthenticationPart2;
    case 'StateAuthorized': return accessor(new StateAuthorized())! as StateAuthorized;
    case 'StateRejected': return accessor(new StateRejected())! as StateRejected;
    default: return null;
  }
}

export function unionListToAuthorizationResult(
  type: AuthorizationResult, 
  accessor: (index: number, obj:AuthenticationPart2|StateAuthorized|StateRejected) => AuthenticationPart2|StateAuthorized|StateRejected|null, 
  index: number
): AuthenticationPart2|StateAuthorized|StateRejected|null {
  switch(AuthorizationResult[type]) {
    case 'NONE': return null; 
    case 'AuthenticationPart2': return accessor(index, new AuthenticationPart2())! as AuthenticationPart2;
    case 'StateAuthorized': return accessor(index, new StateAuthorized())! as StateAuthorized;
    case 'StateRejected': return accessor(index, new StateRejected())! as StateRejected;
    default: return null;
  }
}
