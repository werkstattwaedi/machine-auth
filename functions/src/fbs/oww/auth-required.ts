// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class AuthRequired implements flatbuffers.IUnpackableObject<AuthRequiredT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AuthRequired {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAuthRequired(bb:flatbuffers.ByteBuffer, obj?:AuthRequired):AuthRequired {
  return (obj || new AuthRequired()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAuthRequired(bb:flatbuffers.ByteBuffer, obj?:AuthRequired):AuthRequired {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new AuthRequired()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startAuthRequired(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endAuthRequired(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createAuthRequired(builder:flatbuffers.Builder):flatbuffers.Offset {
  AuthRequired.startAuthRequired(builder);
  return AuthRequired.endAuthRequired(builder);
}

serialize():Uint8Array {
  return this.bb!.bytes();
}

static deserialize(buffer: Uint8Array):AuthRequired {
  return AuthRequired.getRootAsAuthRequired(new flatbuffers.ByteBuffer(buffer))
}

unpack(): AuthRequiredT {
  return new AuthRequiredT();
}


unpackTo(_o: AuthRequiredT): void {}
}

export class AuthRequiredT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return AuthRequired.createAuthRequired(builder);
}
}
