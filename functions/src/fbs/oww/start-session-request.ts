// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { TagUid, TagUidT } from '../oww/tag-uid.js';


export class StartSessionRequest implements flatbuffers.IUnpackableObject<StartSessionRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StartSessionRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStartSessionRequest(bb:flatbuffers.ByteBuffer, obj?:StartSessionRequest):StartSessionRequest {
  return (obj || new StartSessionRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStartSessionRequest(bb:flatbuffers.ByteBuffer, obj?:StartSessionRequest):StartSessionRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StartSessionRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

tokenId(obj?:TagUid):TagUid|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new TagUid()).__init(this.bb_pos + offset, this.bb!) : null;
}

static startStartSessionRequest(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addTokenId(builder:flatbuffers.Builder, tokenIdOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, tokenIdOffset, 0);
}

static endStartSessionRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createStartSessionRequest(builder:flatbuffers.Builder, tokenIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  StartSessionRequest.startStartSessionRequest(builder);
  StartSessionRequest.addTokenId(builder, tokenIdOffset);
  return StartSessionRequest.endStartSessionRequest(builder);
}

serialize():Uint8Array {
  return this.bb!.bytes();
}

static deserialize(buffer: Uint8Array):StartSessionRequest {
  return StartSessionRequest.getRootAsStartSessionRequest(new flatbuffers.ByteBuffer(buffer))
}

unpack(): StartSessionRequestT {
  return new StartSessionRequestT(
    (this.tokenId() !== null ? this.tokenId()!.unpack() : null)
  );
}


unpackTo(_o: StartSessionRequestT): void {
  _o.tokenId = (this.tokenId() !== null ? this.tokenId()!.unpack() : null);
}
}

export class StartSessionRequestT implements flatbuffers.IGeneratedObject {
constructor(
  public tokenId: TagUidT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return StartSessionRequest.createStartSessionRequest(builder,
    (this.tokenId !== null ? this.tokenId!.pack(builder) : 0)
  );
}
}
