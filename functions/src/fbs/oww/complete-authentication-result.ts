// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { Rejected, RejectedT } from '../oww/rejected.js';
import { TokenSession, TokenSessionT } from '../oww/token-session.js';


export enum CompleteAuthenticationResult {
  NONE = 0,
  TokenSession = 1,
  Rejected = 2
}

export function unionToCompleteAuthenticationResult(
  type: CompleteAuthenticationResult,
  accessor: (obj:Rejected|TokenSession) => Rejected|TokenSession|null
): Rejected|TokenSession|null {
  switch(CompleteAuthenticationResult[type]) {
    case 'NONE': return null; 
    case 'TokenSession': return accessor(new TokenSession())! as TokenSession;
    case 'Rejected': return accessor(new Rejected())! as Rejected;
    default: return null;
  }
}

export function unionListToCompleteAuthenticationResult(
  type: CompleteAuthenticationResult, 
  accessor: (index: number, obj:Rejected|TokenSession) => Rejected|TokenSession|null, 
  index: number
): Rejected|TokenSession|null {
  switch(CompleteAuthenticationResult[type]) {
    case 'NONE': return null; 
    case 'TokenSession': return accessor(index, new TokenSession())! as TokenSession;
    case 'Rejected': return accessor(index, new Rejected())! as Rejected;
    default: return null;
  }
}
