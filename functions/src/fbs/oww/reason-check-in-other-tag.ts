// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { TagUid, TagUidT } from '../oww/tag-uid.js';


export class ReasonCheckInOtherTag implements flatbuffers.IUnpackableObject<ReasonCheckInOtherTagT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ReasonCheckInOtherTag {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsReasonCheckInOtherTag(bb:flatbuffers.ByteBuffer, obj?:ReasonCheckInOtherTag):ReasonCheckInOtherTag {
  return (obj || new ReasonCheckInOtherTag()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsReasonCheckInOtherTag(bb:flatbuffers.ByteBuffer, obj?:ReasonCheckInOtherTag):ReasonCheckInOtherTag {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ReasonCheckInOtherTag()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

tokenId(obj?:TagUid):TagUid|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new TagUid()).__init(this.bb_pos + offset, this.bb!) : null;
}

userId():string|null
userId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
userId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startReasonCheckInOtherTag(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addTokenId(builder:flatbuffers.Builder, tokenIdOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, tokenIdOffset, 0);
}

static addUserId(builder:flatbuffers.Builder, userIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, userIdOffset, 0);
}

static endReasonCheckInOtherTag(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createReasonCheckInOtherTag(builder:flatbuffers.Builder, tokenIdOffset:flatbuffers.Offset, userIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  ReasonCheckInOtherTag.startReasonCheckInOtherTag(builder);
  ReasonCheckInOtherTag.addTokenId(builder, tokenIdOffset);
  ReasonCheckInOtherTag.addUserId(builder, userIdOffset);
  return ReasonCheckInOtherTag.endReasonCheckInOtherTag(builder);
}

unpack(): ReasonCheckInOtherTagT {
  return new ReasonCheckInOtherTagT(
    (this.tokenId() !== null ? this.tokenId()!.unpack() : null),
    this.userId()
  );
}


unpackTo(_o: ReasonCheckInOtherTagT): void {
  _o.tokenId = (this.tokenId() !== null ? this.tokenId()!.unpack() : null);
  _o.userId = this.userId();
}
}

export class ReasonCheckInOtherTagT implements flatbuffers.IGeneratedObject {
constructor(
  public tokenId: TagUidT|null = null,
  public userId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const userId = (this.userId !== null ? builder.createString(this.userId!) : 0);

  return ReasonCheckInOtherTag.createReasonCheckInOtherTag(builder,
    (this.tokenId !== null ? this.tokenId!.pack(builder) : 0),
    userId
  );
}
}
