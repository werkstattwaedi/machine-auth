// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { KeyBytes, KeyBytesT } from '../fbs/key-bytes';


export class KeyDiversificationResponse implements flatbuffers.IUnpackableObject<KeyDiversificationResponseT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):KeyDiversificationResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsKeyDiversificationResponse(bb:flatbuffers.ByteBuffer, obj?:KeyDiversificationResponse):KeyDiversificationResponse {
  return (obj || new KeyDiversificationResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsKeyDiversificationResponse(bb:flatbuffers.ByteBuffer, obj?:KeyDiversificationResponse):KeyDiversificationResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new KeyDiversificationResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

applicationKey(obj?:KeyBytes):KeyBytes|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new KeyBytes()).__init(this.bb_pos + offset, this.bb!) : null;
}

authorizationKey(obj?:KeyBytes):KeyBytes|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new KeyBytes()).__init(this.bb_pos + offset, this.bb!) : null;
}

reserved1Key(obj?:KeyBytes):KeyBytes|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new KeyBytes()).__init(this.bb_pos + offset, this.bb!) : null;
}

reserved2Key(obj?:KeyBytes):KeyBytes|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new KeyBytes()).__init(this.bb_pos + offset, this.bb!) : null;
}

static startKeyDiversificationResponse(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addApplicationKey(builder:flatbuffers.Builder, applicationKeyOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, applicationKeyOffset, 0);
}

static addAuthorizationKey(builder:flatbuffers.Builder, authorizationKeyOffset:flatbuffers.Offset) {
  builder.addFieldStruct(1, authorizationKeyOffset, 0);
}

static addReserved1Key(builder:flatbuffers.Builder, reserved1KeyOffset:flatbuffers.Offset) {
  builder.addFieldStruct(2, reserved1KeyOffset, 0);
}

static addReserved2Key(builder:flatbuffers.Builder, reserved2KeyOffset:flatbuffers.Offset) {
  builder.addFieldStruct(3, reserved2KeyOffset, 0);
}

static endKeyDiversificationResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


serialize():Uint8Array {
  return this.bb!.bytes();
}

static deserialize(buffer: Uint8Array):KeyDiversificationResponse {
  return KeyDiversificationResponse.getRootAsKeyDiversificationResponse(new flatbuffers.ByteBuffer(buffer))
}

unpack(): KeyDiversificationResponseT {
  return new KeyDiversificationResponseT(
    (this.applicationKey() !== null ? this.applicationKey()!.unpack() : null),
    (this.authorizationKey() !== null ? this.authorizationKey()!.unpack() : null),
    (this.reserved1Key() !== null ? this.reserved1Key()!.unpack() : null),
    (this.reserved2Key() !== null ? this.reserved2Key()!.unpack() : null)
  );
}


unpackTo(_o: KeyDiversificationResponseT): void {
  _o.applicationKey = (this.applicationKey() !== null ? this.applicationKey()!.unpack() : null);
  _o.authorizationKey = (this.authorizationKey() !== null ? this.authorizationKey()!.unpack() : null);
  _o.reserved1Key = (this.reserved1Key() !== null ? this.reserved1Key()!.unpack() : null);
  _o.reserved2Key = (this.reserved2Key() !== null ? this.reserved2Key()!.unpack() : null);
}
}

export class KeyDiversificationResponseT implements flatbuffers.IGeneratedObject {
constructor(
  public applicationKey: KeyBytesT|null = null,
  public authorizationKey: KeyBytesT|null = null,
  public reserved1Key: KeyBytesT|null = null,
  public reserved2Key: KeyBytesT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  KeyDiversificationResponse.startKeyDiversificationResponse(builder);
  KeyDiversificationResponse.addApplicationKey(builder, (this.applicationKey !== null ? this.applicationKey!.pack(builder) : 0));
  KeyDiversificationResponse.addAuthorizationKey(builder, (this.authorizationKey !== null ? this.authorizationKey!.pack(builder) : 0));
  KeyDiversificationResponse.addReserved1Key(builder, (this.reserved1Key !== null ? this.reserved1Key!.pack(builder) : 0));
  KeyDiversificationResponse.addReserved2Key(builder, (this.reserved2Key !== null ? this.reserved2Key!.pack(builder) : 0));

  return KeyDiversificationResponse.endKeyDiversificationResponse(builder);
}
}
