include "ntag.fbs";
include "machine_usage.fbs";

namespace oww;

// Session RPCs
// NOTE: documentation only, code is generated solely for request/response tables
rpc_service TokenSessionService {
  StartSession(StartSessionRequest): StartSessionResponse;
  AuthenticateNewSession(AuthenticateNewSessionRequest): AuthenticateNewSessionResponse;
  CompleteAuthentication(CompleteAuthenticationRequest): CompleteAuthenticationResponse;
  UploadUsage(UploadUsageRequest): UploadUsageResponse;
}

// Token Session

table TokenSession {
  // NTag UUID
  token_id: oww.TagUid;
  // Firebase session ID
  session_id: string;
  // Session expiration date (unix timestamp)
  expiration: ulong;

  // Firebase user ID
  user_id: string;
  // Display name for the user
  user_label: string;
  // Firebase permission IDs granted for the user
  permissions: [string];
}

// ---- StartSession ----------------------------------------------------------

/** Starts a session */
table StartSessionRequest {
  token_id: oww.TagUid;
}

table AuthRequired {}

table Rejected {
  // User-readable message.
  message: string;
}

union StartSessionResult {
  TokenSession,
  AuthRequired,
  Rejected,
}

table StartSessionResponse {
  result: StartSessionResult;
}

// ---- StartAuthentication ---------------------------------------------------

/** Initiates NTag 3-pass mutual authentication with authorization key. */
table AuthenticateNewSessionRequest {
  token_id: oww.TagUid;
  // Challenge generated by NTag
  ntag_challenge: [ubyte];
}

table AuthenticateNewSessionResponse {
  // Newly generated session ID, no matter the outcome
  session_id: string;
  // Combined NTag challenge response and challenge generated by cloud
  cloud_challenge: [ubyte];
}

// ---- CompleteAuthentication -------------------------------------------------

/** Complete NTag 3-pass mutual authentication with authorization key. */
table CompleteAuthenticationRequest {
  // Session key from AuthenticateNewSessionResponse
  session_id: string; 
  // NTag challenge response
  encrypted_ntag_response: [ubyte];
}

union CompleteAuthenticationResult {
  TokenSession,
  Rejected,
}

table CompleteAuthenticationResponse {
  // Authentication result.
  result: CompleteAuthenticationResult;
}

// ---- UploadUsageRequest -----------------------------------------------------

table UploadUsageRequest {
  history: MachineUsageHistory;
}

table UploadUsageResponse {
  success: bool;
}